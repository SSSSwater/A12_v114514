//package com.example.faceRecognition;
//import ai.djl.modality.cv.ImageFactory;
//
//import ai.djl.modality.cv.Image;
//
//import java.awt.image.BufferedImage;
//import java.io.File;
//import java.io.IOException;
//import java.util.List;
//
//import org.bytedeco.javacv.Java2DFrameUtils;
//import org.bytedeco.opencv.opencv_core.Mat;
//
//import javax.imageio.ImageIO;
//
//public class Main {
//    public static void main(String[] args) throws IOException {
//        BufferedImage bimg=null;
//        try {
//
//
//
//
//            bimg = ImageIO.read(new File("F:\\java\\face\\test.jpg"));
//        }catch (IOException e){
//            e.printStackTrace();
//        }
//        Mat mat = Java2DFrameUtils.toMat(bimg);
//        Image img = ImageFactory.getInstance().fromImage(bimg);
//        FaceDetection faceDetection = new FaceDetection();
//        FeatureExtraction featureExtraction = new FeatureExtraction();
//        List<Image> faces = faceDetection.faceDetection(img, true, mat);
//        double similarity=1;
//        if(faces != null && faces.size() > 0) {
//            for(Image face:faces) {
//                float[] f = featureExtraction.faceFeatureExtraction(face);
//
//                //TODO 获取数据库中对应账号的人脸信息
//
//
//
//                float[] testFeature={
//                        -0.07778902f,0.07603072f,-0.010018508f,-0.027072826f,0.07188144f,-0.0031301186f,0.05449937f,-0.08054477f,0.044776164f,0.031047389f,0.052031625f,0.05040583f,0.020694703f,-0.027043216f,-0.055281136f,0.008524657f,-0.0102137f,0.020171529f,-0.027868116f,4.556156E-4f,-0.0055086175f,0.015143049f,0.047593813f,0.004454692f,-0.048646808f,-0.028350879f,0.03409408f,-0.04108997f,-0.044655673f,-0.014532853f,0.043359198f,-0.0106254015f,0.011220675f,-0.0439102f,0.032358035f,-0.040142093f,0.123415835f,-0.09736816f,-0.0035837754f,-0.047584936f,-0.012658076f,-0.021827444f,0.011880882f,0.036380813f,-0.017600203f,-0.014357854f,-0.021446008f,0.09728134f,-0.023748737f,0.007535605f,-0.04227f,0.009350532f,-0.06719312f,-0.056812618f,0.08127738f,-0.017774489f,-0.008066463f,-0.04690338f,-0.016957665f,0.06810894f,0.06759428f,0.10496158f,0.04556015f,-0.029287094f,0.002745877f,-0.050145984f,-0.007694267f,0.010323311f,0.05352672f,0.03923543f,0.0410929f,-0.01011944f,0.030055681f,0.051260576f,0.04091472f,-0.006035496f,0.034183424f,-0.023489663f,0.003379081f,0.019095194f,-0.047613904f,-0.01033765f,-0.02093527f,0.011426992f,-0.039491672f,-0.107802846f,0.02552219f,0.0066011837f,0.011494959f,-0.08802897f,-0.022835664f,0.017168377f,0.026153337f,0.06728898f,-0.054090563f,0.0038516144f,-0.06135069f,0.004825477f,0.004344088f,0.058637496f,0.004424113f,-0.0033717616f,-0.07277206f,-0.0154891545f,-0.091667205f,0.04630389f,-0.047629338f,-1.1056098E-4f,0.03054971f,0.012472455f,0.08442211f,-0.008324968f,-0.044674072f,0.08973244f,0.05818358f,0.038043737f,0.048977718f,0.0053722444f,0.034841623f,0.0055690915f,0.058908243f,-0.020281225f,0.06584646f,0.02452404f,-0.033249695f,0.030686677f,-0.063466534f,-0.005929211f,-0.013198071f,0.07034719f,-0.0051944763f,-0.055236023f,0.007953107f,-0.04916471f,-0.10086465f,-7.2857126E-4f,-0.08132354f,-0.035613347f,-0.007194579f,-0.045682985f,-0.04066598f,-0.0023217802f,-0.0012098799f,-1.1718962E-4f,0.012341959f,-0.012867116f,0.009449196f,-0.028301878f,0.029614877f,-0.038105287f,-0.0711673f,-0.008313007f,0.023765294f,0.0177759f,0.016023023f,-0.09590005f,-0.032507274f,-0.016964134f,-0.055160664f,-0.024494333f,0.053143766f,0.027231531f,-0.008866324f,-0.0020319917f,0.061252087f,-0.023576384f,0.04714592f,0.08523735f,-0.041712724f,-0.026027527f,0.008354987f,0.006662356f,-0.014460424f,0.020820303f,-0.049121205f,-0.05737031f,0.04944227f,0.074583866f,0.011533293f,0.04533129f,0.004134508f,-0.0036728722f,0.037368495f,-0.073882736f,0.005593043f,-0.03890582f,-0.039248165f,-0.036998224f,-0.050623998f,-0.0058684703f,-0.101738356f,-0.03368615f,0.043706644f,-0.022283394f,-0.018790383f,-0.070605f,0.0902589f,0.0027302683f,0.07174181f,0.041567143f,-0.021616155f,-0.0788418f,-0.009739685f,-0.04237071f,-0.0028324646f,-0.035607103f,0.008187941f,-0.06324554f,-0.045731034f,0.044703953f,0.021667121f,0.021211019f,-0.0380447f,-0.008983928f,-0.012146974f,0.06123534f,0.004654661f,-0.010226834f,0.004005104f,-0.056745905f,-0.011744283f,-0.0149417855f,0.09846902f,-0.0150093585f,0.037884224f,0.0074506598f,-0.001218406f,-0.030419178f,0.043715265f,-0.009380777f,0.0117667215f,-0.01800655f,0.02742081f,0.03414487f,0.0032838671f,0.06679396f,-0.09569495f,0.041447546f,-0.00929385f,0.015144293f,0.054890357f,-0.035480764f,0.055395614f,-0.021650435f,0.05593047f,0.010438242f,0.025345502f,0.022608059f,0.043899603f,-0.048420783f,-0.016928473f,-0.05581826f,0.010013204f,0.046565264f,0.012295843f,-0.106302574f,-0.016086051f,0.06110695f,0.047691587f,-0.0032271526f,-0.0055276193f,0.020303117f,-0.032442994f,-0.054972403f,-0.0023723166f,-0.0037060115f,-0.02391706f,0.022366181f,0.038055215f,-0.011709651f,0.09726187f,-0.053533792f,-0.0036272523f,-0.028209466f,0.030451639f,0.04535268f,0.053351328f,0.08594449f,0.031996857f,-0.015567659f,0.076602906f,-0.0116009815f,-0.034340356f,-0.015207846f,-0.0034759848f,-0.06569846f,-0.028114196f,-0.021281281f,-0.022957707f,0.018374505f,-0.061607968f,-0.037828177f,-0.11773188f,-0.0044682375f,-0.031218428f,0.09882076f,-0.017252281f,-0.031430226f,-0.016089732f,0.0152330715f,0.05345537f,0.052851148f,0.023332652f,0.014345619f,0.0086834645f,-0.020687308f,0.020834656f,-0.03528314f,-0.114186f,-0.034054678f,0.08959099f,-0.03129627f,0.04874122f,0.0079136845f,0.02428111f,0.03240325f,-0.009898595f,-0.03277819f,-0.053392775f,-0.023086967f,0.023780439f,-0.04111887f,0.010711802f,0.11427679f,0.032510296f,-0.0066598095f,0.100576594f,0.030108642f,0.040214468f,-0.014934983f,0.06277618f,-0.041456133f,-0.026643703f,0.0816811f,-0.03824813f,-0.04258422f,0.047322333f,-0.01478044f,0.028436571f,0.069945425f,0.06902791f,-0.06584188f,-0.028352836f,0.018427342f,0.060713932f,-0.017886639f,-0.07082939f,0.0071520405f,0.014642139f,0.013775306f,0.0038954853f,-0.03909761f,0.02473422f,0.0677093f,-0.01941511f,0.10166816f,0.014466671f,0.0053781727f,0.058179755f,0.033053778f,0.0023872876f,0.01884625f,-0.075080514f,-0.05634968f,-0.059461653f,0.06286564f,-0.06919762f,0.0077584097f,-0.047202513f,0.04121625f,0.020458128f,-0.003363014f,-0.0026742446f,0.022633037f,0.033161882f,0.038802605f,-1.0028427E-4f,-0.024177311f,0.017505117f,0.02571799f,0.029742353f,0.085101835f,0.033425838f,-0.020662112f,-0.03377997f,0.034595147f,-0.016806575f,-0.012562129f,-0.0108933635f,0.020405462f,-0.012765514f,-0.05276808f,-0.07379296f,-0.018667744f,0.034754284f,0.004150231f,0.043007135f,-0.012009931f,0.016081082f,-0.004398604f,-0.009084489f,0.0037158988f,0.014527781f,0.025625557f,-0.030949026f,-0.041966178f,0.015025115f,-0.0022768416f,0.043146443f,0.07148911f,9.2502765E-4f,0.031482678f,0.03333869f,0.08157248f,-0.023690222f,-0.0278084f,1.7958459E-4f,0.10222178f,0.019435108f,0.027982714f,-0.036893703f,-0.016888022f,-0.07197473f,-0.03146781f,0.09000844f,0.084718086f,-0.03087694f,0.061077017f,-0.014574991f,0.0667123f,-0.062202107f,0.026358217f,-0.027357228f,-0.0054781693f,-0.12707867f,-0.04982228f,-0.027083967f,0.03364764f,-0.038315278f,0.056471683f,-0.01037691f,-0.017539445f,-0.074973516f,-0.045734175f,-0.037060738f,-0.007912711f,-0.06283797f,-0.019343575f,-0.005006319f,-0.0014469639f,0.07652713f,-0.00791561f,-0.032642245f,-0.0038074988f,-0.120838f,-0.06101373f,-0.07534805f,0.015354877f,0.010415641f,0.07054478f,-0.004811355f,-0.037890106f,-0.05436814f,0.024904797f,-0.010545844f,0.016457373f,0.013587456f,-0.019951675f,-0.002495263f,-0.0627214f,0.043958586f,0.07709889f,0.03510629f,-0.061171874f,-0.064285345f,0.006494538f,-0.0047694347f,0.01328026f,-0.0043650083f,-0.021317786f,-0.0050461814f,0.031109797f,0.005623828f,0.06580398f,-0.03973849f,0.043631706f,-0.0408344f,-0.036405023f,-0.0075135604f,-0.05521103f,-0.0042910054f,0.012292056f,-0.08181045f,-0.0223083f,0.08823464f,-0.0334983f,-0.062368713f,0.021801785f,-0.09720316f,-0.012418122f,-0.03483242f,0.018016815f,-0.0023259302f,0.0015746091f,0.0127081275f,-0.0068956013f,-0.010305397f,0.03431949f,0.018526012f,-0.013576596f,0.046957772f,-0.059984013f,};
//                if(f != null) {
//
//                    double sizeA=0,sizeB=0;
//                    double fz=0,fm=0;
//                    for(int i=0;i<f.length;i++){
//                        fz+=f[i]*testFeature[i];
//                        sizeA+=Math.pow(f[i],2);
//                        sizeB+=Math.pow(testFeature[i],2);
//
//                    }
//                    fm=Math.sqrt(sizeA)*Math.sqrt(sizeB);
//                    similarity=fz/fm;
//                    System.out.println();
//                    System.out.println(similarity);
//
//                }
//            }
//        }
//
//    }
//}
//
//
